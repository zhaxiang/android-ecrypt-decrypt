apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"
    defaultConfig {
        applicationId "com.android.suning.jnimode"
        minSdkVersion 14
        targetSdkVersion 20
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }


    sourceSets {
        main {
            jni.srcDirs = []//禁止gradle 自动编译，使用已经编译好的So库
            jniLibs.srcDirs = ['jniLibs','libs']//指向要使用的库文件//的路径，前边的是自己项目的，后边的是第三方的so
        }
    }

    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn CopyToJniLibs
    }
    task ndkBuild(type: Exec, description: 'Compile JNI source via NDK') {
        Properties properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        def ndkDir = properties.getProperty('ndk.dir')
        commandLine "$ndkDir/ndk-build.cmd", "NDK_PROJECT_PATH=$projectDir.absolutePath\\build", "APP_BUILD_SCRIPT=$projectDir.absolutePath\\jni\\Android.mk", "NDK_APPLICATION_MK=$projectDir.absolutePath\\jni\\Application.mk"
        //你自己的mk文件目录
    }

    task CopyToJniLibs(type: Copy, dependsOn: 'ndkBuild', description: 'copy the native libs to jniLibs') {
        from fileTree(dir: file(buildDir.absolutePath + '/libs'), include: '**/*.so')
        into file('jniLibs')
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
}
